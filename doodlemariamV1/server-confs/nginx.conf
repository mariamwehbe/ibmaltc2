proxy_set_header Host $host;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

# L'idée ici est que toute requête qui arrive sur /api ou une sous
# route d'API passe par ici et en gros on fait un if selon que cette
# requête est arrivé sur l'adresse IP en demandant à parler à
# doodle.istic.tk ou à  phpmyadmin.istic.tk ou à
# pad.istic.tk
location /api {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    if ($host = green.istic.tk) {
        proxy_pass http://back:8080$request_uri;
    }
    if ($host = pad.green.istic.tk) {

        proxy_pass http://etherpad:9001$request_uri;
    }
    if ($host = phpmyadmin.green.istic.tk) {
        proxy_pass http://myadmin$request_uri;
    }
}

# L'idée ici est que toute requête qui arrive sur / ou une sous
# route de / qui n'a pas été traité avant passe par ici et en gros
# on fait un if selon que cette requête est arrivé sur l'adresse IP
# en demandant à parler à  phpmyadmin.istic.tk ou à
# pad.istic.tk et pour tout le reste on fourni les ressources
# statiques du front

location / {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        proxy_redirect off;
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;

        if ($host = pad.green.istic.tk) {

        proxy_pass http://etherpad:9001$request_uri;
        }
        if ($host = phpmyadmin.green.istic.tk) {
        proxy_pass http://myadmin$request_uri;
        }
        try_files $uri $uri/ /index.html;

}